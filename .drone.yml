kind: pipeline
name: code-analyze-check
type: kubernetes

trigger:
  branch: master
  event:
    - push
steps:
  - name: build
    pull: if-not-exists
    image: node:12.18.4-buster
    commands:
      - node -v
    #    - yarn
    #    - yarn build:dependencies
    #    - yarn test-cov
    when:
      branch:
        - master
      event:
        - push
#- name: dev-run-tests-with-coverage
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - yarn
#    - yarn build:dependencies
#    - yarn test-cov
#  when:
#    branch:
#      - master
#    event:
#      - push
#- name: sonar_scan
#  pull: if-not-exists
#  image: quay.digital.homeoffice.gov.uk/ukhomeofficedigital/sonar-scanner-node:6a03c77c7e1bad005893cdcc9cd3d99479b79d5c
#  commands:
#    - sonar-scanner -Dsonar.projectVersion=${DRONE_BUILD_NUMBER} -Dsonar.projectBaseDir=. -Dsonar.projectKey=digital-form-builder
#  when:
#    branch:
#      - master
#    event:
#      - push
#  depends_on:
#    - dev-run-tests-with-coverage

---
kind: pipeline
name: designer-deploy
type: kubernetes

steps:
  - name: ecr-login
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/dind-awscli:19.03.12-dind-1.18.55
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: DESIGNER_AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: DESIGNER_AWS_SECRET_ACCESS_KEY
      AWS_REGION: eu-west-2
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - aws ecr get-login-password --region $${AWS_REGION} | docker login --username AWS --password-stdin 340268328991.dkr.ecr.$${AWS_REGION}.amazonaws.com
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
  - name: build-designer-image
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 120 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - "export DESIGNER_TAG_VERSION=$(cat ./designer/package.json | grep version | head -1 | cut -d : -f2 | cut -d , -f1 | tr -d '\"' | tr -d ' ')"
      - echo "$${DESIGNER_TAG_VERSION}"
      - echo "docker build -t stp/fco-form-builder-designer:$DESIGNER_TAG_VERSION -t stp/fco-form-builder-designer:$DRONE_COMMIT_SHA -t stp/fco-form-builder-designer:latest ./images/designer/. --no-cache" > build.sh
      - sh build.sh
      - echo "docker push stp/fco-form-builder-designer:latest " >> push.sh
      - echo "docker push stp/fco-form-builder-designer:$DRONE_COMMIT_SHA " >> push.sh
      - echo "docker push stp/fco-form-builder-designer:$DESIGNER_TAG_VERSION " >> push.sh
      - cat push.sh
      - sh push.sh
    when:
      branch:
        - master
      event:
        - push
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
#  - name: scan-designer-image
#    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
#    pull: always
#    environment:
#      IMAGE_NAME: digital-form-builder-designer:${DRONE_COMMIT_SHA}
#    depends_on:
#      - build-designer-image
  - name: deploy-designer
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - echo "Deploying designer digital-form-builder-designer:$${DESIGNER_TAG_VERSION}"
    depends_on:
#      - scan-designer-image
      - build-designer-image
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server
depends_on:
  - code-analyze-check

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

volumes:
  - name: dockerclientconfig
    temp: {}

---
kind: pipeline
name: runner-deploy
type: kubernetes

steps:
  - name: build-runner-image
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 120 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - "export RUNNER_TAG_VERSION=$(cat ./runner/package.json | grep version | head -1 | cut -d : -f2 | cut -d , -f1 | tr -d '\"' | tr -d ' ')"
      - echo "$${RUNNER_TAG_VERSION}"
      - echo "docker build -t stp/fco-form-builder:$RUNNER_TAG_VERSION -t stp/fco-form-builder:$DRONE_COMMIT_SHA -t stp/fco-form-builder:latest ./images/runner/. --no-cache" > build.sh
      - sh build.sh
      - echo "docker push stp/fco-form-builder:latest " >> push.sh
      - echo "docker push stp/fco-form-builder:$DRONE_COMMIT_SHA " >> push.sh
      - echo "docker push stp/fco-form-builder:$DESIGNER_TAG_VERSION " >> push.sh
      - cat push.sh
      - sh push.sh
    when:
      branch:
        - master
      event:
        - push
#  - name: scan-runner-image
#    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
#    pull: always
#    environment:
#      IMAGE_NAME: digital-form-builder-runner:${DRONE_COMMIT_SHA}
#    depends_on:
#      - build-runner-image
  - name: deploy-runner
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - echo "Deploying runner digital-form-builder-runner:$${RUNNER_TAG_VERSION}"
    depends_on:
#      - scan-runner-image
      - build-runner-image
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server
depends_on:
  - code-analyze-check

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

volumes:
  - name: dockerclientconfig
    temp: {}
---
kind: pipeline
name: sanity-check
type: kubernetes

steps:
  - name: smoke-tests
    pull: if-not-exists
    image: node:12.18.4-buster
    commands:
      - echo 'Smoke Tests'
    when:
      branch:
        - master
      event:
        - push
depends_on:
  - designer-deploy
  - runner-deploy
  - code-analyze-check