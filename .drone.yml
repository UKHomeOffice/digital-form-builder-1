kind: pipeline
name: code-analyze-check
type: kubernetes

trigger:
  branch: master
  event:
    - push
steps:
- name: build
  pull: if-not-exists
  image: node:12.18.4-buster
  commands:
    - node -v
#    - yarn
#    - yarn build:dependencies
#    - yarn test-cov
  when:
    branch:
      - master
    event:
      - push
#- name: dev-run-tests-with-coverage
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - yarn
#    - yarn build:dependencies
#    - yarn test-cov
#  when:
#    branch:
#      - master
#    event:
#      - push
#- name: sonar_scan
#  pull: if-not-exists
#  image: quay.digital.homeoffice.gov.uk/ukhomeofficedigital/sonar-scanner-node:6a03c77c7e1bad005893cdcc9cd3d99479b79d5c
#  commands:
#    - sonar-scanner -Dsonar.projectVersion=${DRONE_BUILD_NUMBER} -Dsonar.projectBaseDir=. -Dsonar.projectKey=digital-form-builder
#  when:
#    branch:
#      - master
#    event:
#      - push
#  depends_on:
#    - dev-run-tests-with-coverage
#- name: check-designer-version
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - export DESIGNER_TAG_VERSION=$(node -e "console.log(require('./designer/package.json').version);")
#    - echo $DESIGNER_TAG_VERSION
#- name: dev-build-image-designer
#  pull: if-not-exists
#  image: docker:lastest
#  volumes:
#    - name: docker_sock
#      path: /var/run/docker.sock
#  commands:
#    - docker build .
#    - echo "- echo "digital-form-builder-runner:$DESIGNER_TAG_VERSION"
#    - docker -t digital-form-builder-designer:$DESIGNER_TAG_VERSION
#  when:
#    branch:
#      - master
#    event:
#      - push
#  depends_on:
#    - check-designer-version
#- name: check-runner-version
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - RUNNER_TAG_VERSION=$(node -e "console.log(require('./runner/package.json').version);")
#    - echo $RUNNER_TAG_VERSION
#  when:
#    branch:
#      - master
#    event:
#      - push
#  depends_on:
#    - sonar_scan
#- name: publish-ecr
#  pull: if-not-exists
#  image: plugins/ecr
#  settings:
#    group: publish
#    settings:
#      access_key:
#        from_secret: AWS_ACCESS_KEY_ID
#      secret_key:
#        from_secret: AWS_SECRET_ACCESS_KEY
#      context: ./runner
#      dockerfile: ./runner/Dockerfile
#      region: eu-west-2
#      registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
#      repo: digital-form-build/runner
#      tags:
#        - latest
#        - ${DRONE_COMMIT_SHA:0:7}
#        - ${RUNNER_TAG_VERSION}
#  depends_on:
#    - sonar_scan
#- name: dev-build-image-runner
#  pull: if-not-exists
#  image: docker:latest
#  commands:
#    - docker build .
#    - echo "digital-form-builder-runner:$RUNNER_TAG_VERSION"
#  when:
#    branch:
#      - master
#    event:
#      - push
#  depends_on:
#    - check-runner-version
#- name: dev-deploy-designer
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - echo "deploy designer"
#  depends_on:
#    - dev-build-image-designer
#- name: dev-deploy-runner
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - echo "deploy runner"
#  depends_on:
#    - dev-build-image-runner
#- name: dev-smoke-tests
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - echo  "Smoke tests"
#  depends_on:
#    - dev-deploy-designer
#    - dev-deploy-runner
#kind: pipeline
#type: docker
#name: docker-tagging
#
#steps:
#  - name: tag runner
#  pull: if-not-exists
#  commands:
#    - docker build .
#    - echo "digital-form-builder-runner:$RUNNER_TAG_VERSION"
#  when:
#    branch:
#      - master
#    event:
#      - push


---
kind: pipeline
name: designer-deploy
type: kubernetes

steps:
  - name: build-designer-image
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - "export DESIGNER_TAG_VERSION=$(cat ./designer/package.json | grep version | head -1 | cut -d : -f2 | cut -d , -f1 | tr -d '\"' | tr -d ' ')"
      - echo "$${DESIGNER_TAG_VERSION}"
      - echo "docker build -t digital-form-builder-designer:$DESIGNER_TAG_VERSION ${DRONE_COMMIT_SHA} latest ." > build.sh
      - cat build.sh
      - sh build.sh
    when:
      branch:
        - master
      event:
        - push
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server
  - name: scan-designer-image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    environment:
      IMAGE_NAME: test:${DRONE_COMMIT_SHA}
depends_on:
  - code-analyze-check

---
kind: pipeline
name: runner-deploy
type: kubernetes

steps:
  - name: build-runner-image
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - echo "$${RUNNER_TAG_VERSION}"
      - "export RUNNER_TAG_VERSION=$(cat ./runner/package.json | grep version | head -1 | cut -d : -f2 | cut -d , -f1 | tr -d '\"' | tr -d ' ')"
      - echo "$${RUNNER_TAG_VERSION}"
      - echo "docker build -t digital-form-builder-designer:$RUNNER_TAG_VERSION ${DRONE_COMMIT_SHA} latest ." > build.sh
      - cat build.sh
      - sh build.sh
    when:
      branch:
        - master
      event:
        - push
  - name: scan-runner-image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    environment:
      IMAGE_NAME: test:${DRONE_COMMIT_SHA}
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server
depends_on:
  - code-analyze-check

---
kind: pipeline
name: sanity-check
type: kubernetes

steps:
  - name: smoke-tests
    pull: if-not-exists
    image: node:12.18.4-buster
    commands:
      - echo 'Smoke Tests'
    when:
      branch:
        - master
      event:
        - push
depends_on:
  - designer-deploy
  - runner-deploy
  - code-analyze-check