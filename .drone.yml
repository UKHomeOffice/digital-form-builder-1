kind: pipeline
name: code-analyze-check
type: kubernetes

trigger:
  branch: master
  event:
    - push
steps:
  - name: build
    pull: if-not-exists
    image: node:12.18.4-buster
    commands:
      - node -v
    #    - yarn
    #    - yarn build:dependencies
    #    - yarn test-cov
    when:
      branch:
        - master
      event:
        - push
#- name: dev-run-tests-with-coverage
#  pull: if-not-exists
#  image: node:12.18.4-buster
#  commands:
#    - yarn
#    - yarn build:dependencies
#    - yarn test-cov
#  when:
#    branch:
#      - master
#    event:
#      - push
#- name: sonar_scan
#  pull: if-not-exists
#  image: quay.digital.homeoffice.gov.uk/ukhomeofficedigital/sonar-scanner-node:6a03c77c7e1bad005893cdcc9cd3d99479b79d5c
#  commands:
#    - sonar-scanner -Dsonar.projectVersion=${DRONE_BUILD_NUMBER} -Dsonar.projectBaseDir=. -Dsonar.projectKey=digital-form-builder
#  when:
#    branch:
#      - master
#    event:
#      - push
#  depends_on:
#    - dev-run-tests-with-coverage

---
kind: pipeline
name: designer-build-and-deploy
type: kubernetes

steps:
  - name: ecr-login
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/dind-awscli:19.03.12-dind-1.18.55
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: DESIGNER_AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: DESIGNER_AWS_SECRET_ACCESS_KEY
      AWS_REGION: eu-west-2
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - aws ecr get-login-password --region $${AWS_REGION} | docker login --username AWS --password-stdin 340268328991.dkr.ecr.$${AWS_REGION}.amazonaws.com
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
  - name: build-designer-image
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - sleep 5;
      - n=0; while [ "$n" -lt 120 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - "export DESIGNER_TAG_VERSION=$(cat ./designer/package.json | grep version | head -1 | cut -d : -f2 | cut -d , -f1 | tr -d '\"' | tr -d ' ')"
      - echo "$${DESIGNER_TAG_VERSION}"
      - echo "$DESIGNER_TAG_VERSION,$DRONE_COMMIT_SHA,latest" > .tags
      - docker build -t stp/fco-form-builder-designer:$DESIGNER_TAG_VERSION -t stp/fco-form-builder-designer:$DRONE_COMMIT_SHA -t stp/fco-form-builder-designer:latest ./images/designer/. --no-cache
      - echo "docker tag stp/fco-form-builder-designer:$DESIGNER_TAG_VERSION 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/stp-form-builder-designer:$DESIGNER_TAG_VERSION" > push.sh
      - echo "docker tag stp/fco-form-builder-designer:$DRONE_COMMIT_SHA 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer:$DRONE_COMMIT_SHA" >> push.sh
      - echo "docker tag stp/fco-form-builder-designer:latest 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer:latest" >> push.sh
      - echo "docker push 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer:$DESIGNER_TAG_VERSION" >> push.sh
      - echo "docker push 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer:$DRONE_COMMIT_SHA" >> push.sh
      - echo "docker push 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer:latest" >> push.sh
      - sh push.sh
    when:
      branch:
        - master
      event:
        - push
    volumes:
      - name: dockerclientconfig
        path: /root/.docker
  - name: scan-designer-image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    environment:
      IMAGE_NAME: 40268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer:${DRONE_COMMIT_SHA}
    depends_on:
      - build-designer-image
#  - name: deploy-designer
#    image: quay.io/ukhomeofficedigital/kd:v1.16.0
#      commands:
#        - apk update
#        - apk add curl
#        - source bin/env.sh
#        - bin/deploy.sh
#        environment:
#          DRONE_DEPLOY_TO: acp-notprod
#          IMAGE_URL: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder-designer$${RUNNER_TAG_VERSION}
#          KUBE_NAMESPACE: stp-dev
#          KUBE_TOKEN_ACP_NOTPROD:
#            from_secret: kube_token_acp_notprod
#          PREVIEW_MODE: true
#          PREVIEW_URL: https://form-builder.dev.stp-notprod.homeoffice.gov.uk
#          PUBLISH_URL: https://form-builder.dev.internal.stp-notprod.homeoffice.gov.uk
#        when:
#          branch:
#            - master
#          event:
#            - push
#    depends_on:
#      - build-designer-image
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server
depends_on:
  - code-analyze-check

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

volumes:
  - name: dockerclientconfig
    temp: {}

---
kind: pipeline
name: runner-build-and-deploy
type: kubernetes

steps:
  - name: build-runner-image
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      # wait for docker service to be up before running docker build
      - sleep 5;
      - n=0; while [ "$n" -lt 120 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - "export RUNNER_TAG_VERSION=$(cat ./runner/package.json | grep version | head -1 | cut -d : -f2 | cut -d , -f1 | tr -d '\"' | tr -d ' ')"
      - echo "$${RUNNER_TAG_VERSION}"
      - docker build -t stp/fco-form-builder:$RUNNER_TAG_VERSION -t stp/fco-form-builder:$DRONE_COMMIT_SHA -t stp/fco-form-builder:latest ./images/runner/. --no-cache
      - echo "docker tag stp/fco-form-builder:$RUNNER_TAG_VERSION 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:$RUNNER_TAG_VERSION" > push.sh
      - echo "docker tag stp/fco-form-builder:$DRONE_COMMIT_SHA 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:$DRONE_COMMIT_SHA" >> push.sh
      - echo "docker tag stp/fco-form-builder:latest 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:latest" >> push.sh
      - echo "docker push 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:$RUNNER_TAG_VERSION" >> push.sh
      - echo "docker push 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:$DRONE_COMMIT_SHA" >> push.sh
      - echo "docker push 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:latest" >> push.sh
      - sh push.sh
    when:
      branch:
        - master
      event:
        - push
  - name: scan-runner-image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    environment:
      IMAGE_NAME: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/fco-form-builder:${DRONE_COMMIT_SHA}
    depends_on:
      - build-runner-image
#  - name: deploy-runner
#    image: quay.io/ukhomeofficedigital/kd:v1.16.0
#      commands:
#        - apk update
#        - apk add curl
#        - source bin/env.sh
#        - bin/deploy.sh
#      environment:
#        DRONE_DEPLOY_TO: acp-notprod
#        IMAGE_URL: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/stp/form-builder-runner
#        KUBE_NAMESPACE: stp-dev
#        KUBE_TOKEN_ACP_NOTPROD:
#          from_secret: kube_token_acp_notprod
#        PREVIEW_MODE: true
#        GOV_UK_NOTIFY_DEFAULT_API_KEY:
#          from_secret: NOTIFY_API_KEY
#        GOV_UK_NOTIFY_DEFAULT_TEMPLATE_ID: 2d2a640b-db7f-4eb8-8b41-e5d75fc64b64
#      when:
#        branch:
#          - master
#        event:
#          - push
#    depends_on:
#      - build-runner-image
services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  - name: anchore-submission-server
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
    pull: always
    commands:
      - /run.sh server
depends_on:
  - code-analyze-check

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

volumes:
  - name: dockerclientconfig
    temp: {}
---
kind: pipeline
name: sanity-check
type: kubernetes

steps:
  - name: smoke-tests
    pull: if-not-exists
    image: node:12.18.4-buster
    commands:
      - echo 'Smoke Tests'
    when:
      branch:
        - master
      event:
        - push
depends_on:
  - designer-build-and-deploy
  - runner-build-and-deploy
  - code-analyze-check